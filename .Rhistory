x = 2 + 2
print(x)
source("C:\E-OBS-SWB2\R\drafts\sum.R")
source("C:/E-OBS-SWB2/R/drafts/sum.R")
length(seq(0.2, 7, 0.2))
r2 <- read.csv('‪C:\Users\paolo\Downloads\Ricariche2.xls'x)
r2 <- read.csv('‪C:\Users\paolo\Downloads\Ricariche2.xlsx)
#Copia foglio "Lam" di Ricarica_TesiPiccioli
lam <- read.table('clipboard', sep = '\t', header = TRUE)
library(rgee)
ee_Initialize()
library(tidyverse)
library(sf)
library(mapview)
# create a bounding box over Venice
geometry <- ee$Geometry$Polygon(coords = list(c(12.29, 45.45), c(12.29, 45.41), c(12.37, 45.41), c(12.37, 45.45)))
# import CMIP5 bias-corrected daily data from NASA (CMIP6 will soon be made available)
cmip5_downscaled = ee$ImageCollection("NASA/NEX-GDDP")
# View some info on the dataset
ee_print(cmip5_downscaled)
startDate = ee$Date('2030-01-01');
endDate = ee$Date('2031-01-01');
n = endDate$difference(startDate,'day')$subtract(1);
# Choose a variable (max temperature), a climate model, and a forcing scenario
cmip5_downscaled_tasmax = cmip5_downscaled$select("tasmax") $
filterDate(startDate, endDate) $
filter(ee$Filter$eq("model", "MIROC-ESM"))$ # filter the model
filter(ee$Filter$eq("scenario", "rcp45")) # filter the scenario
# extract the mean value of max temperature from the pixels falling in the Venice bounding box for each day in the period defined
ee_nc_tasmax_2030 <- ee_extract(x = cmip5_downscaled_tasmax, y = geometry, fun=ee$Reducer$mean(), sf = FALSE, scale=1000)
# reshape long
ee_nc_tasmax_2030 <- pivot_longer(ee_nc_tasmax_2030, 1:ncol(ee_nc_tasmax_2030))
ee_nc_tasmax_2030 <- ee_nc_tasmax_2030 %>%
separate(col=name,
into=c("scenario", "model", "date", "variable"), sep="_")
ee_nc_tasmax_2030$date <- as.Date(ee_nc_tasmax_2030$date, format = "%Y%m%d")
setwd("C:/Directory_thesis_codes")
source("./R/Libraries/Libraries.R")
source("./R/Libraries/Libraries_plot.R")
source("./R/Libraries/Functions.R")
source("./R/Libraries/Functions_MC.R")
setwd("C:/Directory_thesis_codes")
load("./Data/Analysis/Downstreamness/Dsv_AR_new.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_LR_new.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_N.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_SR.Rdata")
df <- data.frame(date = Dsv_AR$date,
AR = Dsv_AR$Dsv, LR = Dsv_LR$Dsv,
N = Dsv_N$Dsv, SR = Dsv_SR$Dsv)
df <- reshape2::melt(df, id.vars = 'date', variable.name = 'Scenario')
df$Scenario <- as.character(df$Scenario)
date_ranges <- data.frame(
from = as.Date(c("1980-12-01", "1987-05-01", "1992-05-01", "1997-05-01", "2001-02-01", "2005-02-01", "2010-05-01", "2012-05-01", "2014-06-01")),
to = as.Date(c("1984-03-01", "1988-04-01", "1994-04-01", "1999-12-01", "2002-02-01", "2005-12-01", "2010-12-01", "2014-01-01", "2018-12-01"))
)
#Colours
#         AR        LR          N         SR
col <- c("#a651a3", "#429649", "#e2703a", "#046582")
p <- ggplot() +
geom_rect(data = date_ranges, aes(xmin = from, xmax = to, ymin = -Inf, ymax = Inf), alpha = 0.2) +
geom_line(data = df, aes(x = date, y = value, colour = Scenario, linetype = Scenario), size = 1.25, alpha = 0.9) +
scale_y_continuous(name = expression(paste('D'['SV'], " [%]")), limits = c(25, 75)) +
scale_x_date(name = 'Date', date_breaks = "2 years", date_labels = '%Y', limits = as.Date(c("1980-01-01", "2018-12-01")), expand = c(0,0)) +
scale_color_manual(values = col) +
theme(
axis.text.x = element_text(size = 22),
axis.text.y = element_text(size = 22),
axis.title = element_text(size = 22),
legend.title = element_text(size = 24),
legend.text = element_text(size = 22),
legend.position = "bottom"
)
print(p)
plot.save(p, width = 1920, height = 1080, filename = "./Figures and tables/paper/Figure_8a.png")
setwd("C:/Directory_thesis_codes")
load("./Data/Analysis/Downstreamness/Dsv_AR_new.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_LR_new.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_N.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_SR.Rdata")
df <- data.frame(date = Dsv_AR$date,
AR = Dsv_AR$Dsv, LR = Dsv_LR$Dsv,
N = Dsv_N$Dsv, SR = Dsv_SR$Dsv)
df <- reshape2::melt(df, id.vars = 'date', variable.name = 'Scenario')
df$Scenario <- as.character(df$Scenario)
date_ranges <- data.frame(
from = as.Date(c("1980-12-01", "1987-05-01", "1992-05-01", "1997-05-01", "2001-02-01", "2005-02-01", "2010-05-01", "2012-05-01", "2014-06-01")),
to = as.Date(c("1984-03-01", "1988-04-01", "1994-04-01", "1999-12-01", "2002-02-01", "2005-12-01", "2010-12-01", "2014-01-01", "2018-12-01"))
)
#Colours
#         AR        LR          N         SR
col <- c("#a651a3", "#429649", "#e2703a", "#046582")
p <- ggplot() +
geom_rect(data = date_ranges, aes(xmin = from, xmax = to, ymin = -Inf, ymax = Inf), alpha = 0.2) +
geom_line(data = df, aes(x = date, y = value, colour = Scenario, linetype = Scenario), size = 1.25, alpha = 0.9) +
scale_y_continuous(name = expression(paste('D'['SV'], " [%]")), limits = c(25, 75)) +
scale_x_date(name = 'Date', date_breaks = "2 years", date_labels = '%Y', limits = as.Date(c("1980-01-01", "2018-12-01")), expand = c(0,0)) +
scale_color_manual(values = col) +
theme(
axis.text.x = element_text(size = 24),
axis.text.y = element_text(size = 24),
axis.title = element_text(size = 24),
legend.title = element_text(size = 26),
legend.text = element_text(size = 24),
legend.position = "bottom"
)
print(p)
plot.save(p, width = 1920, height = 1080, filename = "./Figures and tables/paper/Figure_8a.png")
setwd("C:/Directory_thesis_codes")
load("./Data/Analysis/Downstreamness/Dsv_AR_new.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_LR_new.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_N.Rdata")
load("./Data/Analysis/Downstreamness/Dsv_SR_new.Rdata")
df <- data.frame(date = Dsv_AR$date,
`AR modified` = Dsv_AR$Dsv_modified, LR = Dsv_LR$Dsv,
N = Dsv_N$Dsv, `SR modified` = Dsv_SR$Dsv_modified)
df <- reshape2::melt(df, id.vars = 'date', variable.name = 'Scenario')
df$Scenario <- as.character(df$Scenario)
df$Scenario[df$Scenario == "AR.modified"] <- "AR modified"
df$Scenario[df$Scenario == "SR.modified"] <- "SR modified"
date_ranges <- data.frame(
from = as.Date(c("1980-12-01", "1987-05-01", "1992-05-01", "1997-05-01", "2001-02-01", "2005-02-01", "2010-05-01", "2012-05-01", "2014-06-01")),
to = as.Date(c("1984-03-01", "1988-04-01", "1994-04-01", "1999-12-01", "2002-02-01", "2005-12-01", "2010-12-01", "2014-01-01", "2018-12-01"))
)
#Colours
#         AR        LR              N           SR
col <- c("#a651a3", "#429649", "#e2703a", "#046582")
p <- ggplot() +
geom_rect(data = date_ranges, aes(xmin = from, xmax = to, ymin = -Inf, ymax = Inf), alpha = 0.2) +
geom_line(data = df, aes(x = date, y = value, colour = Scenario, linetype = Scenario), size = 1.25, alpha = 0.9) +
scale_y_continuous(name = expression(paste('D'['SV'], " [%]")), limits = c(25, 75)) +
scale_x_date(name = 'Date', date_breaks = "2 years",
date_labels = '%Y', limits = as.Date(c("1980-01-01", "2018-12-01")), expand = c(0,0)) +
scale_color_manual(values = col) +
theme(
axis.text.x = element_text(size = 24),
axis.text.y = element_text(size = 24),
axis.title = element_text(size = 24),
legend.title = element_text(size = 26),
legend.text = element_text(size = 24),
legend.position = "bottom"
)
print(p)
plot.save(p, width = 1920, height = 1080, filename = "./Figures and tables/paper/Figure_8b.png")
library(trend)
library(zoo)
setwd('C:/SFS')
head = read.csv('./data/head_IT03GWBISSAPTA.csv')
head_fill = head
for(col in names(head)[-1]){
idx = min(which(!is.na(head[col])))
head_fill[, col][idx:nrow(head)] = na.approx(head[, col][idx:nrow(head)], maxgap = 12)
}
View(head_fill)
head_fill2009 <- head_fill['DATA' >= '2009-01-01', ]
head_fill2009 <- head_fill[head_fill['DATA'] >= '2009-01-01', ]
mk_db <- as.data.frame(array(dim = c(length(names(head_fill)[-1]), 2)))
names(mk_db) <- c("p_value", "z", "S")
rownames(mk_db) <- names(head_fill)[-1]
for(col in names(head_fill)[-1]){
mk_db[col, 1] <- mk.test(head_fill[!is.na(head_fill[, col]), col])$p.value
mk_db[col, 2] <- mk.test(head_fill[!is.na(head_fill[, col]), col])$statistic
mk_db[col, 3] <- mk.test(head_fill[!is.na(head_fill[, col]), col])$estimates[1]
}
#Sen's slope
sen_db <- as.data.frame(array(dim = c(length(names(head_fill)[-1]), 2)))
names(sen_db) <- c("slope", "stat")
rownames(sen_db) <- names(head_fill)[-1]
for(col in names(head_fill)[-1]){
sen_db[col, 1] <- sens.slope(head_fill[!is.na(head_fill[, col]), col])$estimates
sen_db[col, 2] <- sens.slope(head_fill[!is.na(head_fill[, col]), col])$statistic
}
View(mk_db)
names(mk_db) <- c("p_value", "z", "S")
View(mk_db)
View(sen_db)
idx <- (head_fill['DATA'] >= '2009-01-01') & (head_fill['DATA'] <= '2019-12-31')
head_fill2009 <- head_fill[idx, ]
mk_db <- as.data.frame(array(dim = c(length(names(head_fill)[-1]), 2)))
names(mk_db) <- c("p_value", "z", "S")
rownames(mk_db) <- names(head_fill)[-1]
#Mann-Kendall
mk_db <- as.data.frame(array(dim = c(length(names(head_fill)[-1]), 3)))
names(mk_db) <- c("p_value", "z", "S")
rownames(mk_db) <- names(head_fill)[-1]
for(col in names(head_fill)[-1]){
mk_db[col, 1] <- mk.test(head_fill[!is.na(head_fill[, col]), col])$p.value
mk_db[col, 2] <- mk.test(head_fill[!is.na(head_fill[, col]), col])$statistic
mk_db[col, 3] <- mk.test(head_fill[!is.na(head_fill[, col]), col])$estimates[1]
}
#Sen's slope
sen_db <- as.data.frame(array(dim = c(length(names(head_fill)[-1]), 2)))
names(sen_db) <- c("slope", "stat")
rownames(sen_db) <- names(head_fill)[-1]
for(col in names(head_fill)[-1]){
sen_db[col, 1] <- sens.slope(head_fill[!is.na(head_fill[, col]), col])$estimates
sen_db[col, 2] <- sens.slope(head_fill[!is.na(head_fill[, col]), col])$statistic
}
